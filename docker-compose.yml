
services:

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - pbs-state-website
    depends_on:
      - nginx
      
  nginx:
    container_name: reverse-proxy
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - pbs-state-website
    depends_on:
      - frontend

  frontend:
    container_name: pbs-bahamas-frontend
    image: quincyarthur242/pbs-bahamas-state-frontend:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - '3000:3000'
    networks:
      - pbs-state-website
    depends_on:
      - backend

  backend:
    container_name: pbs-bahamas-backend
    image: quincyarthur242/pbs-bahamas-state-backend:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - '1337:1337'
    networks:
      - pbs-state-website
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: gomab
      POSTGRES_DB: pbs_bahamas
    volumes:
      - ./strapi-data:/var/lib/postgresql/data/ #using a volume
    ports:
      - '5432:5432'
    networks:
      - pbs-state-website

networks:
  pbs-state-website:
    name: PBS-State-Website
    driver: bridge
